// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20230801015452_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdProducto")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("DctoBook")
                        .HasColumnType("double")
                        .HasColumnName("DctoProducto");

                    b.Property<string>("DescripcionBook")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("DescripcionProducto");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int")
                        .HasColumnName("Marca_Id");

                    b.Property<double>("PriceBook")
                        .HasColumnType("double")
                        .HasColumnName("PrecioProducto");

                    b.Property<string>("RefBook")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar")
                        .HasColumnName("RefProducto");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Libros", (string)null);
                });

            modelBuilder.Entity("Dominio.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdMarcas")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionEditorial")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Descripcioneditorial");

                    b.HasKey("Id");

                    b.ToTable("Marcas", (string)null);
                });

            modelBuilder.Entity("Dominio.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdPais")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameCountry")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("NombrePais");

                    b.HasKey("Id");

                    b.ToTable("Paises", (string)null);
                });

            modelBuilder.Entity("Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdMarcas")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasMaxLength(70)
                        .HasColumnType("int")
                        .HasColumnName("Edad");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int")
                        .HasColumnName("Provincia_Id");

                    b.Property<int>("IdTypePerson")
                        .HasColumnType("int")
                        .HasColumnName("TipoPersona_Id");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar")
                        .HasColumnName("Apellido");

                    b.Property<string>("NamePerson")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.HasIndex("IdProvincia");

                    b.HasIndex("IdTypePerson");

                    b.ToTable("Personas", (string)null);
                });

            modelBuilder.Entity("Dominio.PersonaBook", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("Persona_Id");

                    b.Property<int>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("Libro_Id");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("PersonaBook", (string)null);
                });

            modelBuilder.Entity("Dominio.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdProvincia")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdRegion")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("Region_Id");

                    b.Property<string>("NameProvincia")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar")
                        .HasColumnName("NombreProvincia");

                    b.HasKey("Id");

                    b.HasIndex("IdRegion");

                    b.ToTable("Provincias", (string)null);
                });

            modelBuilder.Entity("Dominio.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdRegion")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdPais")
                        .HasColumnType("int")
                        .HasColumnName("Pais_Id");

                    b.Property<string>("NameRegion")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar")
                        .HasColumnName("NombreRegion");

                    b.HasKey("Id");

                    b.HasIndex("IdPais");

                    b.ToTable("Regiones", (string)null);
                });

            modelBuilder.Entity("Dominio.TypePerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdTipoPersona")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("DescripcionTipoPersona");

                    b.HasKey("Id");

                    b.ToTable("TipoDePersonas", (string)null);
                });

            modelBuilder.Entity("Dominio.Book", b =>
                {
                    b.HasOne("Dominio.Marca", "Marca")
                        .WithMany("Books")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("Dominio.Persona", b =>
                {
                    b.HasOne("Dominio.Provincia", "Provincia")
                        .WithMany("Personas")
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.TypePerson", "TypePerson")
                        .WithMany("Personas")
                        .HasForeignKey("IdTypePerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");

                    b.Navigation("TypePerson");
                });

            modelBuilder.Entity("Dominio.PersonaBook", b =>
                {
                    b.HasOne("Dominio.Book", "book")
                        .WithMany("PersonaBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Persona", "Persona")
                        .WithMany("PersonaBooks")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");

                    b.Navigation("book");
                });

            modelBuilder.Entity("Dominio.Provincia", b =>
                {
                    b.HasOne("Dominio.Region", "Region")
                        .WithMany("Provincias")
                        .HasForeignKey("IdRegion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Dominio.Region", b =>
                {
                    b.HasOne("Dominio.Pais", "Pais")
                        .WithMany("Regions")
                        .HasForeignKey("IdPais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Dominio.Book", b =>
                {
                    b.Navigation("PersonaBooks");
                });

            modelBuilder.Entity("Dominio.Marca", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Dominio.Pais", b =>
                {
                    b.Navigation("Regions");
                });

            modelBuilder.Entity("Dominio.Persona", b =>
                {
                    b.Navigation("PersonaBooks");
                });

            modelBuilder.Entity("Dominio.Provincia", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Dominio.Region", b =>
                {
                    b.Navigation("Provincias");
                });

            modelBuilder.Entity("Dominio.TypePerson", b =>
                {
                    b.Navigation("Personas");
                });
#pragma warning restore 612, 618
        }
    }
}
